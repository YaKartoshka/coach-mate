// npm start demo1 - start app

var args = process.argv.slice(2);
run_mode = args[0];
require("../config/"+run_mode); //global config -> conf

const fdb = require('../libs/firebase_db');
var app = require("../app");
var http = require("http");
var server = http.createServer(app);


server.listen(conf.port);
server.on("error", onError);
console.log(`App is listening at host http://localhost:${conf.port}`);








generateSK = () => {
    var sk = crypto.randomBytes(20).toString("hex");
    return sk;
}

generatePassword = () => {
    var randomstring = Math.random().toString(36).slice(-6);
    return randomstring;
}

getCookie = (name) => {
    const value = `; ${document.cookie}`;
    const parts = value.split(`; ${name}=`);
    if (parts.length === 2) return parts.pop().split(';').shift();
}

function onError(error) {
    if (error.syscall !== "listen") {
      throw error;
    }
  
    var bind = typeof port === "string" ? "Pipe " + port : "Port " + port;
  
    // handle specific listen errors with friendly messages
    switch (error.code) {
      case "EACCES":
        console.error(bind + " requires elevated privileges");
        //process.exit(1);
        break;
      case "EADDRINUSE":
        console.error(bind + " is already in use");
        //process.exit(1);
        break;
      default:
        throw error;
    }
  }
  